imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: aws.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - bootstrap_3_layout.html.twig
    globals:
        asg_prod: "%asg_prod%"
        asg_preprod: "%asg_preprod%"
        asg_prod_api: "%asg_api_prod%"
        asg_preprod_api: "%asg_api_preprod%"
        
    
assetic:
    debug:          '%kernel.debug%'
    use_controller:  true #'%kernel.debug%'
    bundles:         ['AppBundle','FOSUserBundle','TwigBundle']
    filters:
        cssrewrite: ~

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    encryption: "%mailer_encryption%"
    host:      "%mailer_host%"
    spool:     { type: memory }
    
    
#    transport (smtp, mail, sendmail, or gmail)
#    username
#    password
#    host
#    port
#    encryption (tls, or ssl)
#    auth_mode (plain, login, or cram-md5)
#    spool
#        type (how to queue the messages, file or memory is supported, see How to Spool Emails)
#        path (where to store the messages)
#    delivery_addresses (an array of email addresses where to send ALL emails)
#    disable_delivery (set to true to disable delivery completely)

#    email_delivery:
#    smtp_settings:
#      address: smtp.office365.com
#      port: 587
#      domain: smtp.office365.com
#      authentication: :login
#      user_name: myuser@mydomain.com
#      password: mypassword
#      enable_starttls_auto: true
#    
    
#FOSUser
fos_user:
    db_driver:     orm                       
    firewall_name: main                      
    user_class:    AppBundle\Entity\User
    from_email:
        address:        redmine@42consulting.fr
        sender_name:    ManagementFreebox

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template

#Extension Soft Doctrine    
stof_doctrine_extensions:
    orm:
        default:
            sluggable: true  
            timestampable: true
            tree: true
            